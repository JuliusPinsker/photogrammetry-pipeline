version: '3.8'

services:
  # Core pipeline orchestrator
  pipeline-core:
    build: 
      context: ./core
      dockerfile: Dockerfile
    container_name: photogrammetry-core
    volumes:
      - ./data:/app/data
      - ./results:/app/results
      - ./benchmarks:/app/benchmarks
      - /home/fabi/projects/360_scenes:/app/test_data:ro
    environment:
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://postgres:postgres@postgres:5432/pipeline_db
    depends_on:
      - redis
      - postgres
    networks:
      - pipeline-network

  # Web interface
  web-interface:
    build:
      context: ./web-interface
      dockerfile: Dockerfile
    container_name: photogrammetry-web
    ports:
      - "8080:80"
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    environment:
      - API_BASE_URL=http://pipeline-core:5000
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  # Redis for job queue
  redis:
    image: redis:7-alpine
    container_name: photogrammetry-redis
    volumes:
      - redis_data:/data
    networks:
      - pipeline-network

  # PostgreSQL for metadata and results
  postgres:
    image: postgres:15
    container_name: photogrammetry-postgres
    environment:
      - POSTGRES_DB=pipeline_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./core/sql:/docker-entrypoint-initdb.d
    networks:
      - pipeline-network

  # Traditional photogrammetry methods
  meshroom:
    build:
      context: ./methods/meshroom
      dockerfile: Dockerfile
    container_name: photogrammetry-meshroom
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    environment:
      - METHOD_NAME=meshroom
      - CORE_API_URL=http://pipeline-core:5000
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  colmap:
    build:
      context: ./methods/colmap
      dockerfile: Dockerfile
    container_name: photogrammetry-colmap
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    environment:
      - METHOD_NAME=colmap
      - CORE_API_URL=http://pipeline-core:5000
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  openmvg:
    build:
      context: ./methods/openmvg
      dockerfile: Dockerfile
    container_name: photogrammetry-openmvg
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    environment:
      - METHOD_NAME=openmvg
      - CORE_API_URL=http://pipeline-core:5000
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  # Neural rendering methods (GPU required)
  instant-ngp:
    build:
      context: ./methods/instant-ngp
      dockerfile: Dockerfile
    container_name: photogrammetry-instant-ngp
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - METHOD_NAME=instant-ngp
      - CORE_API_URL=http://pipeline-core:5000
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  gaussian-splatting:
    build:
      context: ./methods/gaussian-splatting
      dockerfile: Dockerfile
    container_name: photogrammetry-gaussian-splatting
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - METHOD_NAME=gaussian-splatting
      - CORE_API_URL=http://pipeline-core:5000
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  mobile-nerf:
    build:
      context: ./methods/mobile-nerf
      dockerfile: Dockerfile
    container_name: photogrammetry-mobile-nerf
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    environment:
      - METHOD_NAME=mobile-nerf
      - CORE_API_URL=http://pipeline-core:5000
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

  pifuhd:
    build:
      context: ./methods/pifuhd
      dockerfile: Dockerfile
    container_name: photogrammetry-pifuhd
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - METHOD_NAME=pifuhd
      - CORE_API_URL=http://pipeline-core:5000
    volumes:
      - ./data:/app/data
      - ./results:/app/results
    depends_on:
      - pipeline-core
    networks:
      - pipeline-network

volumes:
  redis_data:
  postgres_data:

networks:
  pipeline-network:
    driver: bridge
