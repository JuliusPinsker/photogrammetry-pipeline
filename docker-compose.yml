version: '3.8'

services:
  # Web Interface Service
  web:
    build: 
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./data:/app/data
      - ./results:/app/results
      - /home/fabi/projects/360_scenes:/app/360_scenes:ro
    environment:
      - CORE_API_URL=http://core:5000
    depends_on:
      - core
      - redis

  # Core Pipeline API
  core:
    build:
      context: ./core
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    volumes:
      - ./data:/app/data
      - ./results:/app/results
      - /home/fabi/projects/360_scenes:/app/360_scenes:ro
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - REDIS_URL=redis://redis:6379
      - DATA_PATH=/app/data
      - RESULTS_PATH=/app/results
      - SCENES_PATH=/app/360_scenes
    depends_on:
      - redis
    privileged: true

  # Redis for job queue
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Traditional Photogrammetry Methods
  meshroom:
    build:
      context: ./engines/meshroom
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    # Optional GPU acceleration for feature extraction
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    profiles:
      - engines

  colmap:
    build:
      context: ./engines/colmap
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    # Optional GPU acceleration for stereo processing
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    profiles:
      - engines

  openmvg:
    build:
      context: ./engines/openmvg
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    # CPU-only method, no GPU required
    profiles:
      - engines

  # Neural Methods (GPU Required)
  instant-ngp:
    build:
      context: ./engines/instant-ngp
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - engines

  gaussian-splatting:
    build:
      context: ./engines/gaussian-splatting
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - engines

  mobilenerf:
    build:
      context: ./engines/mobilenerf
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    # CPU-optimized method, optional GPU acceleration
    environment:
      - CUDA_VISIBLE_DEVICES=0
    profiles:
      - engines

  pifuhd:
    build:
      context: ./engines/pifuhd
      dockerfile: Dockerfile
    volumes:
      - ./data:/workspace/data
      - ./results:/workspace/results
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - engines

volumes:
  redis_data:

networks:
  default:
    name: photogrammetry-pipeline
